USE INSTACART;

SELECT * FROM AISLES; -- 상품 카테고리
SELECT * FROM DEPARTMENTS; -- 상품 카테고리
SELECT * FROM ORDER_PRODUCTS__PRIOR; -- 주문 번호의 상세 내역
SELECT * FROM ORDERS; -- 주문 대표 정보
SELECT * FROM PRODUCTS; -- 상품 정보

-- P.158
-- 지표 추출 : 일반적인 마케팅 관련 내용
-- 전체 주문 건수
SELECT
	COUNT(DISTINCT ORDER_ID)
    , COUNT(DISTINCT USER_ID)
FROM ORDERS
;

-- 상품별 주문건수
-- 주문번호와 상품명을 같이 사용하려면
-- ORDER_PRODUCT__PRIOR와 PRODUCTS를 JOIN 해야한다.
SELECT *
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
;

SELECT 
	B.PRODUCT_NAME
    , COUNT(DISTINCT A.ORDER_ID) F
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
GROUP BY 1
;

SELECT 
	B.PRODUCT_NAME
    , COUNT(DISTINCT A.ORDER_ID) F
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
GROUP BY 1
ORDER BY 2 DESC
;

-- 장바구니에 가장 먼저 넣는 상품 10개
-- 첫번째로 담기는 주문건은 1, 그 외에는 0으로 표기
SELECT
	PRODUCT_ID
    , CASE WHEN ADD_TO_CART_ORDER = 1 THEN 1 ELSE 0 END F_1ST
FROM ORDER_PRODUCTS__PRIOR
ORDER BY 1, 2 DESC
;

-- 첫번째로 가장 많이 담기는 PRODUCT_ID 상위 10개를 추출하자!
SELECT *
FROM(
SELECT *
	, ROW_NUMBER() OVER(ORDER BY F_1ST DESC) RNK
FROM (
SELECT
	PRODUCT_ID
    , SUM(CASE WHEN ADD_TO_CART_ORDER = 1 THEN 1 ELSE 0 END) F_1ST
FROM ORDER_PRODUCTS__PRIOR
GROUP BY 1
) A
) B
WHERE RNK BETWEEN 1 AND 10
;

SELECT *
	, ROW_NUMBER() OVER(ORDER BY F_1ST DESC) RNK
FROM (
SELECT
	PRODUCT_ID
    , SUM(CASE WHEN ADD_TO_CART_ORDER = 1 THEN 1 ELSE 0 END) F_1ST
FROM ORDER_PRODUCTS__PRIOR
GROUP BY 1
) A
LIMIT 10
;

-- 시간별 주문 건수
SELECT * FROM ORDERS;

SELECT 
	ORDER_HOUR_OF_DAY
    , COUNT(DISTINCT ORDER_ID) F
FROM ORDERS
GROUP BY 1
ORDER BY 1
;

-- 첫 구매 후 다음 구매까지 걸린 평균 일수
-- ORDER_NUMBER 2인 의미 파악
SELECT 
	AVG(DAYS_SINCE_PRIOR_ORDER) AVG_RECENCY
FROM ORDERS
WHERE ORDER_NUMBER = 2
;

-- 주문 건당 평균 구매 상품 수(UPT, UNI PER TRANSACTION)
SELECT
	COUNT(PRODUCT_ID)/ COUNT(DISTINCT ORDER_ID) UPT
FROM ORDER_PRODUCTS__PRIOR
;

-- 인당 평균 주문 건수 : 전체 주문 건수를 구매자 수로 나누어서 계산
SELECT
	COUNT(DISTINCT ORDER_ID)/ COUNT(DISTINCT USER_ID) AS AVG_F
FROM ORDERS
;

-- 재구매율이 가장 높은 상품 10개
-- P.169
-- 상품별로 재구매율을 계산한 뒤,
-- 재 구매율을 기준으로 랭크를 계산함(서브쿼리, 윈도우 함수)
-- RANK 값으로 1-10WHRJS / LIMIT

SELECT * FROM ORDER_PRODUCTS__PRIOR;

SELECT 
	PRODUCT_ID
    , SUM(CASE WHEN REORDERED=1 THEN 1 ELSE 0 END)/COUNT(*) RET_RATIO
FROM ORDER_PRODUCTS__PRIOR
GROUP BY 1
;

SELECT *
	, ROW_NUMBER() OVER(ORDER BY RET_RATIO DESC) RNK
FROM(
SELECT 
	PRODUCT_ID
    , SUM(CASE WHEN REORDERED=1 THEN 1 ELSE 0 END)/COUNT(*) RET_RATIO
FROM ORDER_PRODUCTS__PRIOR
GROUP BY 1
) A
LIMIT 10
;

-- 재구매율로 랭크(순위) 열 생성하기
SELECT 
	*
    , ROW_NUMBER() OVER(ORDER BY RET_RATIO DESC) RNK
FROM(
SELECT 
	PRODUCT_ID
    , SUM(REORDERED)/COUNT(*) RET_RATIO
FROM ORDER_PRODUCTS__PRIOR
GROUP BY 1
)A
;

SELECT 
	*
    , ROW_NUMBER() OVER(ORDER BY RET_RATIO DESC) RNK
FROM (
	SELECT 
		product_id
		, SUM(reordered) / COUNT(*) AS RET_RATIO
	FROM
		order_products__prior
	GROUP BY 1
) A 
WHERE product_id IN (
SELECT product_id 
	FROM (
		SELECT 
			product_id
			, SUM(reordered) AS 합계
		FROM
			order_products__prior
		GROUP BY 1 
	) A
	WHERE 합계 >= 50
)
;

SELECT product_id 
FROM (
	SELECT 
		product_id
		, SUM(reordered) AS 합계
	FROM
		order_products__prior
	GROUP BY 1 
) A
WHERE 합계 >= 50
;

-- DEPARTMENT 별 재 구매율이 가장 높은 상품 10개
SELECT
	*
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
LEFT
JOIN DEPARTMENTS C
ON B.DEPARTMENT_ID = C.DEPARTMENT_ID
;

SELECT
	DEPARTMENT
    , A.PRODUCT_ID
    , SUM(REORDERED)/COUNT(*) AS RET_RATIO
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
LEFT
JOIN DEPARTMENTS C
ON B.DEPARTMENT_ID = C.DEPARTMENT_ID
GROUP BY 1,2
;

SELECT *
	, ROW_NUMBER() OVER(PARTITION BY DEPARTMENT ORDER BY RET_RATIO DESC) RNK
FROM(
SELECT
	DEPARTMENT
    , A.PRODUCT_ID
    , SUM(REORDERED)/COUNT(*) AS RET_RATIO
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
LEFT
JOIN DEPARTMENTS C
ON B.DEPARTMENT_ID = C.DEPARTMENT_ID
GROUP BY 1,2
) BASE
;

SELECT*
FROM(
SELECT *
	, ROW_NUMBER() OVER(PARTITION BY DEPARTMENT ORDER BY RET_RATIO DESC) RNK
FROM(
SELECT
	DEPARTMENT
    , A.PRODUCT_ID
    , SUM(REORDERED)/COUNT(*) AS RET_RATIO
FROM ORDER_PRODUCTS__PRIOR A
LEFT
JOIN PRODUCTS B
ON A.PRODUCT_ID = B.PRODUCT_ID
LEFT
JOIN DEPARTMENTS C
ON B.DEPARTMENT_ID = C.DEPARTMENT_ID
GROUP BY 1,2
) A
WHERE PRODUCT_ID IN (
SELECT product_id 
FROM (
	SELECT 
		product_id
		, SUM(reordered) AS 합계
	FROM
		order_products__prior
	GROUP BY 1 
) A
WHERE 합계 >= 10
)
)B
WHERE RNK <= 10
;