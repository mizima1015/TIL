-- 이번주 목요일, PostgreSQL (다양한 DB를 다뤄보기 위해 해보자) <-- 문제 푸는 시간 최대 부여 코딩테스트 하듯이
-- 교재 P.143, REVIEW TEXT를 분석 해보자!
-- 5.SIZE COMPLAIN

USE MYDATA;
SELECT `REVIEW TEXT`
	, CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END AS SIZE_YN
FROM DATASET2
;
-- SIZE가 있는 REVIEW TEXT 합계
USE MYDATA;
SELECT
	SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) AS N_SIZE
    , COUNT(*) AS N_TOTAL
FROM DATASET2
;

SELECT 
    A.*,
    ROUND(N_SIZE / N_TOTAL, 2) AS RATE
FROM (
    SELECT 
        SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) AS N_SIZE,
        COUNT(*) AS N_TOTAL
    FROM DATASET2
) A
;

SELECT 
	`DEPARTMENT NAME`
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) N_SIZE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END) N_LARGE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END) N_LOOSE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END) N_SMALL
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END) N_TIGHT
    , SUM(1) N_TOTAL
FROM DATASET2
GROUP BY 1
;

-- 연령별로 어떤 형태의 불평이 있는지 확인해 보자.
SELECT 
	FLOOR(AGE/10) * 10 AGEBAND
	, `DEPARTMENT NAME`
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) N_SIZE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END) N_LARGE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END) N_LOOSE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END) N_SMALL
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END) N_TIGHT
    , SUM(1) N_TOTAL
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'BOTTOMS'
GROUP BY 1,2 
ORDER BY 1
;

SELECT 
    FLOOR(AGE/10) * 10 AS AGEBAND,
    `DEPARTMENT NAME`,
    SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) AS N_SIZE,
    SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END) AS N_LARGE,
    SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END) AS N_LOOSE,
    SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END) AS N_SMALL,
    SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END) AS N_TIGHT,
    COUNT(*) AS N_TOTAL
FROM DATASET2
GROUP BY 1, 2
HAVING AGEBAND = 20
ORDER BY 1
;

SELECT 
	FLOOR(AGE/10) * 10 AGEBAND
	, `DEPARTMENT NAME`
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END)/SUM(1) N_SIZE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END)/SUM(1) N_LARGE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END)/SUM(1) N_LOOSE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END)/SUM(1) N_SMALL
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END)/SUM(1) N_TIGHT
    , SUM(1) N_TOTAL
FROM DATASET2
GROUP BY 1,2 
ORDER BY 1,2 
;

-- CLOTING ID 별 SIZE REVIEW
-- 각 제품 SIZE COMPLAING 분석

SELECT `CLOTHING ID`
	, SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END) N_SIZE
FROM DATASET2
GROUP BY 1
;

-- SIZE 타입 추가

SELECT 
	`CLOTHING ID`
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END)/SUM(1) N_SIZE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END)/SUM(1) N_LARGE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END)/SUM(1) N_LOOSE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END)/SUM(1) N_SMALL
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END)/SUM(1) N_TIGHT
    , SUM(1) N_TOTAL
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'BOTTOMS'
GROUP BY 1 
;

-- 테이블로 만들기
DROP TABLE SIZE_STAT_AS;
CREATE TABLE SIZE_STAT_AS
SELECT
	`CLOTHING ID`
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SIZE%' THEN 1 ELSE 0 END)/SUM(1) N_SIZE_T
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LARGE%' THEN 1 ELSE 0 END)/SUM(1) N_LARGE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%LOOSE%' THEN 1 ELSE 0 END)/SUM(1) N_LOOSE
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%SMALL%' THEN 1 ELSE 0 END)/SUM(1) N_SMALL
    , SUM(CASE WHEN `REVIEW TEXT` LIKE '%TIGHT%' THEN 1 ELSE 0 END)/SUM(1) N_TIGHT
    , SUM(1) N_TOTAL
FROM DATASET2
GROUP BY 1 
;

SELECT * FROM SIZE_STAT_AS;