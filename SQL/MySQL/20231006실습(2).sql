USE MYDATA;
SELECT COUNT(*) FROM DATASET2;
SELECT * FROM DATASET2;


-- A) 평균 평점
SELECT
	`DIVISION NAME`
    , AVG(RATING) AVG_RATE
FROM DATASET2
GROUP BY 1
ORDER BY 2 DESC
;

-- B) DEPARTMENT 별 평균 평점
SELECT
	`DEPARTMENT NAME`
    , AVG(RATING) AVG_RATE
FROM DATASET2
GROUP BY 1
ORDER BY 2 DESC
;

-- TREND의 평점 3점 이하 리뷰
SELECT *
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'TREND'
	AND RATING <=3 
;

-- 구간을 그룹으로 나누어서 집계하는 방법
-- 나이대를 그룹 단위로 나눈다.
-- CASE WHEN

SELECT
CASE WHEN AGE BETWEEN 0 AND 9 THEN '0009' 
	WHEN AGE BETWEEN 10 AND 19 THEN '1019' 
    WHEN AGE BETWEEN 20 AND 29 THEN '2029' 
    WHEN AGE BETWEEN 30 AND 39 THEN '3039' 
    WHEN AGE BETWEEN 40 AND 49 THEN '4049' 
    WHEN AGE BETWEEN 50 AND 59 THEN '5059' 
    WHEN AGE BETWEEN 60 AND 69 THEN '6069' 
    WHEN AGE BETWEEN 70 AND 79 THEN '7079' 
    WHEN AGE BETWEEN 80 AND 89 THEN '8089' 
    WHEN AGE BETWEEN 90 AND 99 THEN '9099' END AGEBAND,
    AGE
    FROM MYDATA.DATASET2
    WHERE `DEPARTMENT NAME` = 'TREND'
		AND RATING <=3
    ;
    
    
-- FLOOR 메서드 사용
SELECT FLOOR(AGE/10) * 10 AS AGEBAND
	, AGE
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'TREND'
	AND RATING <=3
;
    
SELECT
	FLOOR(AGE/10) * 10 AS AGEBAND
	, COUNT(*) CNT
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'TREND'
	AND RATING <= 3
GROUP BY 1
ORDER BY 2 DESC
;

-- DEPARTMENT 별 연령별 리뷰 수
SELECT
	FLOOR(AGE/10) * 10 AS AGEBAND
	, COUNT(*) CNT
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'TREND'
GROUP BY 1
ORDER BY 2 DESC
;

-- 50대 3점 이하 TREND 리뷰를 살펴보기
SELECT *
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'TREND'
	AND RATING <= 3
    AND AGE BETWEEN 50 AND 59
LIMIT 10
;

-- 리뷰 주 내용이 사이즈 불만
-- P.134

SELECT
	`DEPARTMENT NAME`
    , `CLOTHING ID`
    , AVG(RATING) AS AVG_RATE
FROM DATASET2
GROUP BY 1,2
;

-- DEPARTMENT 내에서 평균 평점을 기준으로 순위를 매긴다.
-- ROW_NUMBER()

SELECT *
	, ROW_NUMBER() OVER(PARTITION BY `DEPARTMENT NAME` -- 같은 부서? 가 여러게 나오므로 
		ORDER BY AVG_RATE) RNK
FROM (
	SELECT
		`DEPARTMENT NAME`
		, `CLOTHING ID`
		, AVG(RATING) AS AVG_RATE
	FROM DATASET2
	GROUP BY 1,2
	) A
;

-- 1~10위 데이터 조회
-- 평균 평점이 낮은 데이터를 추출 하기 위해서 (상위 10개)
SELECT *
FROM(
	SELECT *
	, ROW_NUMBER() OVER(PARTITION BY `DEPARTMENT NAME` -- 같은 부서? 가 여러게 나오므로 
		ORDER BY AVG_RATE) RNK
	FROM (
		SELECT
			`DEPARTMENT NAME`
			, `CLOTHING ID`
			, AVG(RATING) AS AVG_RATE
		FROM DATASET2
		GROUP BY 1,2
	) A
) A
WHERE RNK <= 10
;

-- CLOTING ID 만 추출한 뒤, 각 부서별 리뷰 텍스트를 추출
-- 임시 테이블 생성
CREATE TEMPORARY TABLE MYDATA.STAT AS
SELECT
  `DEPARTMENT NAME`,
  `CLOTHING ID`,
  AVG_RATE
FROM (
  SELECT
    `DEPARTMENT NAME`,
    `CLOTHING ID`,
    AVG(RATING) AS AVG_RATE,
    ROW_NUMBER() OVER(
      PARTITION BY `DEPARTMENT NAME` 
      ORDER BY AVG(RATING) DESC
    ) AS RNK
  FROM DATASET2
  GROUP BY `DEPARTMENT NAME`, `CLOTHING ID`
) AS RankedData
WHERE RNK <= 10;

SELECT * FROM STAT;
SELECT * FROM DATASET2;

-- 부서명 : BOTTOMS
-- CLOTHING ID 18, 588, 1039, 1058
SELECT * FROM DATASET2;

SELECT
	`CLOTHING ID`
	, `REVIEW TEXT`
FROM DATASET2
WHERE `DEPARTMENT NAME` = 'BOTTOMS'
	AND `CLOTHING ID` IN (18, 588, 1039, 1058)
ORDER BY 1
;

SELECT
	`DEPARTMENT NAME`,
	`CLOTHING ID`,
	`REVIEW TEXT`
FROM DATASET2
WHERE `CLOTHING ID` IN (
		SELECT `CLOTHING ID` FROM STAT
        WHERE `DEPARTMENT NAME` = 'BOTTOMS'
    )
ORDER BY 1;

-- P.139
-- 연령별 WORST DEPARTMENT
-- 각 연령대별로 가장 낮은 점수를 준 DEPARTMENT를 구하고,
-- 해당 DEPARTMENT의 할인 쿠폰을 발송한다.
-- 연령별로 가장 낮은 점수를 준 DEPARTMENT를 구하고
-- 연령별로 가장 낮은 점수를 준 DEPARTMENT에 혜택을 준다.

SELECT
	`DEPARTMENT NAME`
    , FLOOR(AGE/10) * 10 AGEBAND
    , AVG(RATING) AS AVG_RATING
FROM DATASET2
GROUP BY 1,2
;

SELECT *
	,ROW_NUMBER() OVER(PARTITION BY AGEBAND 
		ORDER BY AVG_RATING) RNK
FROM(
SELECT
	`DEPARTMENT NAME`
    , FLOOR(AGE/10) * 10 AGEBAND
    , AVG(RATING) AS AVG_RATING
FROM DATASET2
GROUP BY 1,2
) A
;

SELECT *
FROM (
SELECT *
	,ROW_NUMBER() OVER(PARTITION BY AGEBAND 
		ORDER BY AVG_RATING) RNK
FROM(
SELECT
	`DEPARTMENT NAME`
    , FLOOR(AGE/10) * 10 AGEBAND
    , AVG(RATING) AS AVG_RATING
FROM DATASET2
GROUP BY 1,2
) A
) A
WHERE RNK =1
;